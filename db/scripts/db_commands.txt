rails generate scaffold Organization name:string email:string phone:string fax:string company_url:string sign_up_code:string join_date:datetime 

rails generate scaffold Subscription start_date:datetime expire_date:datetime max_member_count:integer organization:references

rails generate scaffold Team name:string organization:references

rails generate migration AddOrganizationToUsers organization:references

rails generate migration AddUsersCountToOrganizations users_count:integer

rails g migration add_signup_token_to_users signup_token:string signup_token_sent_at:datetime

rails generate migration AddMealCarbonFootprintToUsers meal_carbon_footprint:float

rails g migration DropMealTypes

rails g migration DropMeals

rails g migration AddMealDayReferenceToFood 

rails g migration AddSizeToFoods size:integer 

rails g migration AddSizeToFoods size:integer

rails g model PointsLog point_date:date point_type:string desc:string point:integer user:references

rails g migration AddFatRewardPointsToUsers	fat_reward_points:integer

rails g model Notification day:string time:integer user:references

rails g model NotifyMethod name:string desc:string notification:references

rails g model NotifyTask name:string desc:string notification:references

rails g migration AddNameToNotifications  name:string

# drop reference from table
rails g migration remove_user_from_notifications user:belongs_to

rails g migration AddDescriptionToNotification description:string

rails g model NotificationUser user:references notification:references day:string time:integer

class CreateNotificationUsers < ActiveRecord::Migration
  def change
    create_table :notification_users do |t|
      t.references :user, index: true, foreign_key: true
      t.references :notification, index: true, foreign_key: true
      t.string :day, default: 'Everyday'
      t.integer :time, default: 21

      t.timestamps null: false
    end

    # re-create the index with no unique
    add_index(:notification_users, [:user_id, :notification_id], unique: false)

  end
end



rails g migration RemoveColumnsfromNotification
def change
    remove_column :coupons, :kind
    remove_column :coupons, :discount
  end

# To remove all the generated files from migration 
# note: -p for dry run
rails destroy model NotifyTask -p

rails g migration DropNotifyTasks


class DropNotifyTasks < ActiveRecord::Migration
  def change
    drop_table :notify_tasks
  end
end




rails g model Group name:string desc:string user:references  

# delete all the files it created and roll back any changes made, use -p for pretend and print out executing steps
rails destroy model Group
rails d controller welcome -p

# do this for has_many through
rails g model Group name:string desc:string
rails g model GroupUser user:references group:references datetime_sign_in:datetime 
rails g migration removeGroupUserUniqueIndex

# time zone
rails g migration add_time_zone_to_profiles time_zone:string


# change existing column default 
rails g migration changeProfileTimeZoneDefault

############################################
Rails destroy ....  

rails destroy scaffold Team

rake db:rollback

rails destroy migration AddUserToOrganizations


# To undo a migration with DB changes
rake db:rollback
rails destroy migration add_time_zone_to_users


######################################################

# test cases
nullify for dependent when parent object is destroyed

#rails g migration create_food_types category:int carbon_footprint:float icon name


######################################################

Adding this to the file

class CreateGroupUsers < ActiveRecord::Migration
  def change
    create_table :group_users do |t|
      t.references :user, index: true, foreign_key: true
      t.references :group, index: true, foreign_key: true
      t.datetime :datetime_sign_in

      t.timestamps null: false

    end

    # add unique index to columns
    add_index(:group_users, [:user_id, :group_id], unique: true)

  end
end