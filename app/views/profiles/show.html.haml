-content_for :meta do
  %meta{name: "turbolinks-cache-control", content:"no-cache"}

-content_for :body_class do
  adelle

.bg-gray-1
  .max-width-3.mx-auto.p2

    .flex.items-center
      = inline_svg "icons/i-user.svg"
      %h1.ml2 Profile

    / Begin Login info section
    .bg-white.px3.pt2.pb3.rounded.mb2
      .h2.mb3 Login
      .h6.mb0.gray-5 Email address
      .h3.my0= @profile.email
      = form_tag "#", method: 'post', class: 'edit_password clearfix', style: 'display: none;' do
        / Inline styles used below for jQuery show and hide animations to work
        .col-12.sm-col.sm-col-10.px0.sm-pl0.sm-pr2.mt2
          %label.h6.inline.mb0.gray-5{for: "current_password"} Current password
          #curr-password-error.inline
          = password_field_tag :current_password, nil, data: {"parsley-excluded": "true", "parsley-errors-container":"#curr-password-error"}, class: "text-input"
          .mt1
            %label.h6.inline.mb0.gray-5{for: "new_password"} New password
            #new-password-error.inline
            = password_field_tag :new_password, nil, data: { "parsley-required": "true", "parsley-errors-container": "#new-password-error", "parsley-minlength": "8", "parsley-notequalto": "#current_password"  }, class: "text-input"
          .mt1
            %label.h6.inline.mb0.gray-5{for: "new_password_confirmation"} Confirm new password
            #confirm-new-password-error.inline{for: "new_password_confirmation"}
            = password_field_tag :new_password_confirmation, nil, data: { "parsley-equalto": "#new_password", "parsley-required": "true", "parsley-group": "change-password", "parsley-equalto-message": 'Password confirmation does not match new password', "parsley-errors-container":"#confirm-new-password-error" }, class: "text-input"

      .flex.items-center.mt2
        #btn-change-password.btn.btn-sm.btn-secondary.btn-secondary--hover
          Change password
        #msg-password-update.flex.items-center.green{style:'display:none'}
          %h4.ml2.mr1 Saved
          = inline_svg "icons/i-success.svg", class: 'icon-s'
        #btn-cancel-change-password.btn.btn-sm.btn-secondary.btn-secondary--hover.mx1{style: 'display: none;'}
          Cancel
      / End Login Section

    .clearfix
      = simple_form_for @profile, url: profile_path(@profile) do |f|
        .clearfix.bg-white.rounded.px3.pt2.pb3.mb2
          .h2.mb3 Personal
          .col.col-12.sm-col.sm-col-5.px0.sm-pl0.sm-pr2
            = f.input :first_name, input_html: {class: "text-input"}, label_html: {class: 'h6 mb0 gray-5'}

          .col.col-12.sm-col.sm-col-5.sm-pl0.sm-pr2.mt1.sm-mt0
            = f.input :last_name, input_html: {class: "text-input"}, label_html: {class: 'h6 mb0 gray-5'}

          .col.col-12.sm-col.sm-col-10.sm-pl0.sm-pr2.mt1
            = f.input :phone, input_html: {class: "text-input", data: {"parsley-pattern": "^((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}$"}}, label_html: {class: 'h6 mb0 gray-5'}

          

        .clearfix.bg-white.rounded.px3.pt2.pb3
          .h2.mb3 Home
          .col.col-12.sm-col.sm-col-10.px0.sm-pl0.sm-pr2
            =f.input :address_line_1, input_html: {class: "text-input"}, label: 'Home address', label_html: {class: 'h6 mb0 gray-5'}

          .col.col-12.sm-col.sm-col-4.px0.sm-pl0.sm-pr2
            =f.input :city, input_html: {class: "text-input"}, label_html: {class: 'h6 mb0 gray-5'}

          .col.col-12.sm-col.sm-col-2.px0.sm-pl0.sm-pr2.mt1.sm-mt0
            =f.input :state, collection: us_states, input_html: {class: "select-box bg-white"}, label_html: {class: 'h6 mb0 gray-5'}

          .col.col-12.sm-col.sm-col-4.px0.sm-pl0.sm-pr2.mt1.sm-mt0
            =f.input :zip_code, input_html: {class: "text-input", data: {"parsley-required": "true", "parsley-length": "[5,5]", "parsley-length-message": "Zip code should be 5 characters."}}, label_html: {class: 'h6 mb0 gray-5'}

          .clearfix
            .col.col-12.sm-col.sm-col-4.px0.sm-pl0.sm-pr2.mt1
              %label.h6.gray-5 Housing
              #housing-radio-buttons.mt2.radio.nowrap
                = radio_button_tag('profile[housing]', "own", (@profile.housing == 'own'))
                = label_tag('profile[housing][own]', "Own")
                &nbsp;
                = radio_button_tag('profile[housing]', "rent", (@profile.housing == 'rent'))
                = label_tag('profile[housing][rent]', "Rent")

            .col.col-12.sm-col.sm-col-6.px0.sm-pl0.sm-pr2.mt2.sm-mt1
              %label.h6.gray-5{for: 'avg_electrical_bill'} Average electric bill
              .clearfix.flex.items-center
                .col.col-8.mt1
                  .slider{target: '#profile_avg_electrical_bill'}
                .col.col-4.pl1
                  .inline-block.center
                    %h2.ml2.mt1.my0
                      $
                      %span#slider_val= @profile.avg_electrical_bill
              =f.input :avg_electrical_bill, as: :hidden, input_html: { value: @profile.avg_electrical_bill || "0" }

        .clearfix
          .col.col-12.mt2.px0.sm-px0.sm-py2
            .flex.items-center
              =f.submit 'Save changes', class: 'btn btn-md btn-primary btn-primary--hover'
              / inline style so jquery show() works.
              #msg-profile-update.flex.items-center.green{style:'display:none'}
                .h4.inline-block.ml2.mr1
                  Saved
                = inline_svg "icons/i-success.svg", class: "icon-s block"

      #notifications.clearfix.bg-white.rounded.px3.pt2.pb3.mb4
        .h2.mb3 Notifications
        .col.col-12.sm-col.sm-col-6
          = label_tag 'time_zone', 'Time zone', class: 'h6 mb0 gray-5'
          = select_tag "user[time_zone]", options_for_select(@us_time_zones), class: "select-box bg-white"

        .col.col-12.mt4
          - Notification.all.each do |notification|
            .pb2{data: {'notification-id': notification.id}}
              - _notification = @user.notifications.find{|n| n == notification}
              - _notification_user = _notification ? NotificationUser.find_by(notification: _notification) : nil

              = check_box_tag "user[notification_ids][]", notification.id, !_notification.nil?, id: dom_id(notification)
              = label_tag dom_id(notification), notification.description
              = select_tag "user[time][]", options_for_select(hours_am_pm,  (_notification_user ? _notification_user.time : 21))

:javascript
  modulejs.require('member_profile')(#{@profile.avg_electrical_bill});
  modulejs.require('notification_settings');
  mixpanel.track('Profile page loaded');
