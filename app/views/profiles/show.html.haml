#member-profile.bg-gray-05
  .max-width-4.mx-auto.p2
    %h1 Your profile

    .clearfix.bg-white.p2.rounded.mb4
      .col.col-12.px2
        %h2 Login
        %h4.mb0.gray-60 Email address
        %p= @profile.email
        = form_tag "#", class: 'edit_password', style: 'display:none;' do
          / Inline styles used below for jQuery show and hide animations to work
          .col.col-12
            %h4.mb0.gray-60 Current password
            <input type='password' id='current-password' data-parsley-required="true" parsley-current-password>
            /= password_field_tag :current_password, nil, data: {"parsley-required": "true", "parsley-group": "change-password"}, 
            %h4.mb0.gray-60 New password
            = password_field_tag :new_password, nil, data: { "parsley-required": "true",  }
            %h4.mb0.gray-60 Confirm new password
            = password_field_tag :new_password_confirmation, nil, data: { "parsley-equalto": "#new_password", "parsley-required": "true", "parsley-group": "change-password", "parsley-equalto-message": 'Password confirmation does not match new password' }

        #btn-change-password.btn.btn-sm.btn-primary.btn-primary--hover.mt2{data: {state:'change'}}
          Change password
        #btn-cancel-change-password.btn.btn-sm.btn-secondary.btn-secondary--hover.mt2{style: 'display: none'}
          Cancel


    .clearfix.bg-white.p2.rounded.mb4.px2
      %h2.px2 Personal
      = simple_form_for @profile, url: profile_path(@profile) do |f|
        .clearfix
          .col.col-12.sm-col.sm-col-6.px2
            %h4.mb0.gray-60 First name
            = f.input_field :first_name, data: {"parsley-required": "true"}
            
          .col.col-12.sm-col.sm-col-6.px2
            %h4.mb0.gray-60 Last name
            = f.input_field :last_name, data: {"parsley-required": "true"}

          .col.col-12.px2
            %h4.mb0.gray-60 Phone
            = f.input_field :phone, data: {"parsley-pattern": "^((\\(\\d{3}\\) ?)|(\\d{3}-))?\\d{3}-\\d{4}$"}
        
        .clearfix
          %h2.px2 Home
          .col.col-12.px2
            %h4.mb0.gray-60 Home address
            =f.input_field :address_line_1
        
        .clearfix
          .col.col-12.sm-col.sm-col-4.px2
            %h4.mb0.gray-60 City
            =f.input_field :city, data: {"parsley-required": "true"}
          
          .col.col-12.sm-col.sm-col-4.px2
            %h4.mb0.gray-60 State
            =f.input_field :state, collection: us_states, include_blank: "Select state...", data: {"parsley-required": "true"}

          .col.col-12.sm-col.sm-col-4.px2
            %h4.mb0.gray-60 Zip Code
            =f.input_field :zip_code, data: {"parsley-required": "true"}
          
        .clearfix.px2
          .col.col-12.sm-col.sm-col-4.px2
            %h4.mb0.gray-60 Housing
            = radio_button_tag('profile[housing]', "own", (@profile.housing == 'own'))
            = label_tag('profile[housing]', "Own")
            &nbsp;
            = radio_button_tag('profile[housing]', "rent", (@profile.housing == 'rent'))
            = label_tag('profile[housing]', "Rent")
            
          .col.col-12.sm-col.sm-col-8.px2
            %h4.mb0.gray-60 Average electric bill
            .clearfix.pl1
              .col.col-8.mt1
                #slider{target: '#profile_avg_electrical_bill'}
              .col.col-4.pl1
                .inline-block.center
                  %h2.m0
                    &nbsp;$
                    %span#slider_val= @profile.avg_electrical_bill
            =f.input :avg_electrical_bill, as: :hidden, input_html: { value: @profile.avg_electrical_bill || "0" }

        .col.col-12.p2
          =f.submit class: 'btn btn-sm btn-primary', disabled: true

:javascript

  (function(){
    // Module variable declarations
    var 
        $pwForm,
        $profileForm,
        $pPwForm,
        $pProfileForm,
        // $pCurrPw,
        // $pNewPw,
        // $pNewPwConfirm,
        $pwSubmit,
        $profileSubmit,
        $btnChangePw,
        $btnCancelChangePw;

    $pCurrPw = $('#current_password').parsley();
    
    // jQueryfied Forms
    var $pwForm = $('.edit_password');
    var $profileForm = $('.edit_profile');

    // Parsleyfied forms
    var $pPwForm = $('.edit_password').parsley();
    var $pProfileForm = $('.edit_profile').parsley();

    // Parsley password fields
    // var $pCurrPw = $('#current_password').parsley();
    // var $pNewPwConfirmField = $('#new_password_confirmation').parsley();
    // var $pNewPwField = $('#new_password').parsley();
    
    $btnChangePw = $('#btn-change-password');
    $btnCancelChangePw = $('#btn-cancel-change-password');

    $profileSubmit = $profileForm.find('input[type=submit]');

    //mask phone and zip code input
    $('#profile_zip_code').mask('00000');
    $('#profile_phone').mask('(000) 000-0000');
    
    $profileForm.on('form:success', function(){
      $.ajax({
        type: "POST",
        url: $('form').attr('action'),
        //beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
        data: { _method:'PATCH',  updatedFields},
        dataType: 'script',
        success: function(msg) {
        }
      });
    }); 
    
    // Fields to bind input change listener
    var profileFields = {
      first_name: $('#profile_first_name'),
      last_name: $('#profile_last_name'),
      phone: $('#profile_phone'),
      address: $('#profile_address_line_1'),
      city: $('#profile_city'),
      state: $('#profile_state'),
      zip_code: $('#profile_zip_code')
    };

    //payload with updated info to send to server
    updatedFields = {};

    var enableSubmit = function(){
      $profileSubmit.prop("disabled", false);
    }

    var setUpdatedField = function($field){
      field_name = $field.attr('name');
      field_value = $field.val();
      updatedFields[field_name] = field_value;
    }

    // jQuery UI Slider for average electrical bill
    $( "#slider" ).slider({
      range: "min",
      animate: "fast",
      max: 250,
      value: #{@profile.avg_electrical_bill},
      create: function( event, ui ) {
        $('#slider > span').css({cursor: 'pointer', outline: '0'});
      },
      slide: function( event, ui ) {
        $('#slider_val').html(ui.value);
        $('#profile_avg_electrical_bill').val(ui.value);
        setUpdatedField($($(event.target).attr('target')));
        enableSubmit();
      }
    });
    
    // Bind input event handler
    for (key_name in profileFields){
      profileFields[key_name].on('input', function(event){
        setUpdatedField($(this));
        enableSubmit();
      });
    }

    // Event handler for radio buttons
    $('input[type=radio]').change(function() {
      setUpdatedField($(this));
      enableSubmit();
    });

    $profileSubmit.on('click', function(event){
      event.preventDefault();
      $pForm.validate();
    });

    var changePassword = function(){
      $pwForm.show('slow');
      $btnCancelChangePw.show('slow');
      $btnChangePw.html('Save changes').unbind('click');
      $btnChangePw.bind('click', submitChangedPassword);
    };

    var submitChangedPassword = function(){
      $pPwForm.validate();
    };

    $pPwForm.on('form:success', function(){
      $current_password = $('#current_password').val();
      alert($current_password);
      $.ajax({
        type: "GET",
        url: '/profile/verify-current-password',
        //beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
        data: {$current_password},
        dataType: 'json',
        success: function(data, status, jqxhr) {
          if(status == 'success'){
            alert('success');
          }else{
            $pCurrPw.trigger('field:error');
          }
        }
      });
    });

    /*$pCurrPw.on('field:success', function(){
      $pNewPwField.validate();
      $pNewPwConfirmField.validate(); 
    });*/
    

    /*$pNewPwConfirmField.on('field:success', function(){
      $pNewPwField.validate();
      var updated_password = $('#new_password_confirmation').val();
      $.ajax({
        type: "POST",
        url: '/profile/update-password',
        //beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
        data: { _method:'PATCH',  updated_password},
        dataType: 'json',
        success: function(data, status, jqxhr) {
          if(status == 'success'){
            
          }
        }
      });
    });*/

    // Change password event handling
    $btnChangePw.on('click', changePassword);

    $btnCancelChangePw.on('click', function(){
      $pwForm.hide('slow', function(){

        // clear password input fields on cancel
        $pwForm.find('input[type=password]').val("");

        // Reset parsley styles
        $pPwForm.reset();
      });

      $btnCancelChangePw.hide('slow');
      $btnChangePw
        .html('Change password')
        .unbind('click', submitChangedPassword)
        .bind('click', changePassword);
    });
  }());


